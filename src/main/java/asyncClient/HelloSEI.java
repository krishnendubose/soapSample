
package asyncClient;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "HelloSEI", targetNamespace = "http://test/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface HelloSEI {


    /**
     * 
     * @return
     *     returns javax.xml.ws.Response<asyncClient.HelloMsgResponse>
     */
    @WebMethod(operationName = "helloMsg")
    @RequestWrapper(localName = "helloMsg", targetNamespace = "http://test/", className = "asyncClient.HelloMsg")
    @ResponseWrapper(localName = "helloMsgResponse", targetNamespace = "http://test/", className = "asyncClient.HelloMsgResponse")
    public Response<HelloMsgResponse> helloMsgAsync();

    /**
     * 
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "helloMsg")
    @RequestWrapper(localName = "helloMsg", targetNamespace = "http://test/", className = "asyncClient.HelloMsg")
    @ResponseWrapper(localName = "helloMsgResponse", targetNamespace = "http://test/", className = "asyncClient.HelloMsgResponse")
    public Future<?> helloMsgAsync(
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<HelloMsgResponse> asyncHandler);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "helloMsg", targetNamespace = "http://test/", className = "asyncClient.HelloMsg")
    @ResponseWrapper(localName = "helloMsgResponse", targetNamespace = "http://test/", className = "asyncClient.HelloMsgResponse")
    public String helloMsg();

}
